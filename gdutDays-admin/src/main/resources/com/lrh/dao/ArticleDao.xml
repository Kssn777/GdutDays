<?xml version="1.0" encoding="UTF-8" ?>
<!--MyBatis配置文件-->
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.lrh.dao.ArticleDao">
    <select id="listArticle" resultType="com.lrh.entity.vo.ArticleVo">
        SELECT a.id as id,a.title as title,a.content as content,DATE_FORMAT(from_unixtime(a.create_date),"%Y-%m-%d %T") as createDate,a.likenums as likenums,a.comment_counts as commentCounts,u.username as authorName,ifnull(l.like_status,0) as isLiked,u.avatar as avatar
        from article a left join `article_likes` l on a.id = l.article_id and l.user_id = #{userId} left join `user` u on a.author_id = u.id
        <where>
            1=1
            <if test="categoryId != null" >
            and a.category_id = #{categoryId}
            </if>
        </where>
    </select>
    <select id="searchArticles" resultType="com.lrh.entity.vo.ArticleVo">
        SELECT a.id as id,a.title as title,a.content as content,DATE_FORMAT(from_unixtime(a.create_date),"%Y-%m-%d %T") as createDate,a.likenums as likenums,a.comment_counts as commentCounts,u.username as authorName
        from article a,`user` u
        <where>
            a.id = u.id
            <if test="keyword != null">
            and a.title like CONCAT('%',#{keyword},'%')

            </if>
        </where>
    </select>
    <select id="viewById" resultType="com.lrh.entity.vo.ArticleVo">
        select a.id as id, a.title as title,a.content as content,a.likenums as likenums,a.comment_counts as comment_counts,DATE_FORMAT(from_unixtime(a.create_date),"%Y-%m-%d %T") as createDate,u.username as authorName,ifnull(l.like_status,0) as isLiked,u.avatar as avatar,u.id as authorId
        from `article` a left join `user` u on a.author_id = u.id left join article_likes l on l.article_id = a.id and l.user_id = #{userId}
        where a.id = #{id}
    </select>


</mapper>